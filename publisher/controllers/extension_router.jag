<%
var type;
(function () {
    var path, elements, theme, mapper, suffix, pages, links, length, link, i, mod,
            log = new Log(),
            config = require('/config/publisher.js').config(),
            publisher = require('/modules/publisher.js'),
            file = require('/modules/file.js'),
            matcher = new URIMatcher(request.getRequestURI()),
            prefix = config.urls.EXTENSIONS + '/',
            server = require('store').server,
            tenant = server.tenant(request, session),
            configs = publisher.configs(tenant.tenantId);
    mapper = function (path) {
        return function () {
            return path;
        };
    };

    var securityModule = require('/modules/security/security.manager.js').securityManagementModule();

    var sm = securityModule.cached();

    //This will short circuit the handling of the requests
    var passed = sm.check(session);

    //Stop servicing the request if the check failed
    if (!passed) {
        return;
    }

    if (matcher.match('/{context}' + prefix + '{type}/pages/{+suffix}')) {
        mod = require('/modules/publisher.js');
        elements = matcher.elements();
        type = elements.type;
        suffix = elements.suffix;
        pages = publisher.ASSETS_EXT_PATH + type + '/pages/';
        if (suffix) {
            links = mod.publisher(request, session);
            links = mod.publisher(request, session).assetLinks(type).links;
            if (!links) {
                response.sendError(404, 'Request Resource cannot be found');
                return;
            }
            length = links.length;
            for (i = 0; i < length; i++) {
                link = links[i];
                if (new RegExp(link.url).test(suffix)) {
                    path = link.path || link.url;
                    break;
                }
            }
            if (path) {
                path = pages + path;
            } else {
                response.sendError(404, 'Request Resource cannot be found');
                return;
            }
            request.getMappedPath = mapper(path);
            include(path);
            return;
        }
    }

    if (matcher.match('/{context}' + prefix + '{type}/apis/{+suffix}')) {

        mod = require('/modules/publisher.js');
        elements = matcher.elements();
        type = elements.type;
        suffix = elements.suffix;
        apis = publisher.ASSETS_EXT_PATH + type + '/apis/';
        if (suffix) {
            links = mod.publisher(request, session).apiLinks(type).links;
            if (!links) {
                response.sendError(404, 'Request Resource cannot be found');
                return;
            }
            length = links.length;
            for (i = 0; i < length; i++) {
                link = links[i];
                if (new RegExp(link.url).test(suffix)) {
                    path = link.path || link.url;
                    break;
                }
            }
            if (path) {
                path = apis + path;
            } else {
                response.sendError(404, 'Request Resource cannot be found');
                return;
            }
            request.getMappedPath = mapper(path);
            include(path);
            return;
        }
    }

    response.sendError(404, 'Requested Resource cannot be found');
}());
%>